#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# clone fe:SOURCE host:remote_system_ds/disk.i size
#   - fe is the front-end hostname
#   - SOURCE is the path of the disk image in the form DS_BASE_PATH/disk
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host

SRC=$1
DST=$2
VM_ID=$3
DS_ID=$4

#--------------------------------------------------------------------------------

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
    LIB_LOCATION=/usr/lib/one
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
    LIB_LOCATION=$ONE_LOCATION/lib
fi

DRIVER_PATH=$(dirname $0)

source $TMCOMMON
source ${DRIVER_PATH}/../../datastore/libfs.sh
source ${DRIVER_PATH}/../../etc/datastore/linstor_un/linstor_un.conf
source ${DRIVER_PATH}/../../datastore/linstor_un/linstor_utils.sh

#-------------------------------------------------------------------------------
# Compute the destination image name
#-------------------------------------------------------------------------------

SRC_PATH=`arg_path $SRC`
SRC_RES="$(echo "$SRC_PATH" | $AWK -F/ '{print $(NF-1)}')"

DST_HOST=`arg_host $DST`
DST_PATH=`arg_path $DST`
DST_DIR=`dirname $DST_PATH`
DST_DS_ID=$(echo $DST_DIR | $AWK -F/ '{print $(NF-1)}')

DISK_ID=$(echo $DST | awk -F. '{print $NF}')
DST_RES="one-vm-${VM_ID}-disk-${DISK_ID}"
DST_DEV="/dev/drbd/by-res/${DST_RES}/0"

#-------------------------------------------------------------------------------
# Get Image information
#-------------------------------------------------------------------------------

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
        XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VM_ID| $XPATH  \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SIZE \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/ORIGINAL_SIZE)

SIZE="${XPATH_ELEMENTS[j++]}"
ORIGINAL_SIZE="${XPATH_ELEMENTS[j++]}"

#-------------------------------------------------------------------------------
# Get Datastore information
#-------------------------------------------------------------------------------

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
        XPATH_ELEMENTS[i++]="$element"
done < <(onedatastore show -x $DST_DS_ID | $XPATH \
                    /DATASTORE/TEMPLATE/BRIDGE_LIST \
                    /DATASTORE/TEMPLATE/LS_CONTROLLERS \
                    /DATASTORE/TEMPLATE/NODE_LIST \
                    /DATASTORE/TEMPLATE/LAYER_LIST \
                    /DATASTORE/TEMPLATE/REPLICAS_ON_SAME \
                    /DATASTORE/TEMPLATE/REPLICAS_ON_DIFFERENT \
                    /DATASTORE/TEMPLATE/AUTO_PLACE \
                    /DATASTORE/TEMPLATE/DO_NOT_PLACE_WITH \
                    /DATASTORE/TEMPLATE/DO_NOT_PLACE_WITH_REGEX \
                    /DATASTORE/TEMPLATE/STORAGE_POOL \
                    /DATASTORE/TEMPLATE/DISKLESS_POOL \
                    /DATASTORE/TEMPLATE/ENCRYPTION)

BRIDGE_LIST="${XPATH_ELEMENTS[j++]}"
LS_CONTROLLERS="${XPATH_ELEMENTS[j++]}"
NODE_LIST="${XPATH_ELEMENTS[j++]}"
LAYER_LIST="${XPATH_ELEMENTS[j++]}"
REPLICAS_ON_SAME="${XPATH_ELEMENTS[j++]}"
REPLICAS_ON_DIFFERENT="${XPATH_ELEMENTS[j++]}"
AUTO_PLACE="${XPATH_ELEMENTS[j++]}"
DO_NOT_PLACE_WITH="${XPATH_ELEMENTS[j++]}"
DO_NOT_PLACE_WITH_REGEX="${XPATH_ELEMENTS[j++]}"
STORAGE_POOL="${XPATH_ELEMENTS[j++]}"
DISKLESS_POOL="${XPATH_ELEMENTS[j++]:-DfltDisklessStorPool}"
ENCRYPTION="${XPATH_ELEMENTS[j++]}"

#-------------------------------------------------------------------------------
# Clone the image
#-------------------------------------------------------------------------------

SRC_HOST=`linstor_get_host_for_res "$SRC_RES" 1`
if [ -z "$SRC_HOST" ]; then
    error_message "Datastore template missing 'BRIDGE_LIST' attribute."
    exit -1
fi
if [ -z "$NODE_LIST" ] && [ -z "$AUTO_PLACE" ]; then
    error_message "Datastore template missing 'NODE_LIST' or 'AUTO_PLACE' attribute."
    exit -1
fi
if [ -z "$STORAGE_POOL" ]; then
    error_message "Datastore template missing 'STORAGE_POOL' attribute."
    exit -1
fi

linstor_load_keys

linstor_deploy_volume "$DST_RES" "${SIZE}M"

linstor_attach_volume "$SRC_HOST" "$SRC_RES" "$DISKLESS_POOL"
linstor_attach_volume "$SRC_HOST" "$DST_RES" "$DISKLESS_POOL"

CLONE_CMD=$(cat <<EOF
    set -e -o pipefail
    $QEMU_IMG convert -O raw "$SRC_PATH" "$DST_DEV"
EOF
)

ssh_exec_and_log "$SRC_HOST" "$CLONE_CMD" \
                 "Error cloning $SRC_RES to $DST_RES on $SRC_HOST"

linstor_detach_volume "$SRC_HOST" "$SRC_RES" 1
linstor_detach_volume "$SRC_HOST" "$DST_RES" 1

LINK_CMD=$(cat <<EOF
    set -e -o pipefail
    mkdir -p $DST_DIR
    rm -f $DST_PATH
    ln -s $DST_DEV $DST_PATH
EOF
)

linstor_attach_volume "$DST_HOST" "$DST_RES" "$DISKLESS_POOL"

ssh_exec_and_log "$DST_HOST" "$LINK_CMD" \
                 "Error linking $DST_DEV to $DST_PATH on $DST_HOST"
